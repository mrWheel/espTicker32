name: Auto Tag Release

on:
  push:
    branches:
      - main

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get version from espTicker32.cpp
        id: get_version
        run: |
          VERSION=$(grep 'const char\* ESPTICKER32_VERSION' src/espTicker32.cpp | sed -E 's/.*"([^"]+)".*/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      - name: Fetch all tags
        run: git fetch --tags

      - name: Get latest semver tag
        id: latest_tag
        run: |
          LATEST=$(git tag --sort=-v:refname | grep -E '^([0-9]+\.){2}[0-9]+$' | head -n 1)
          echo "Latest tag is $LATEST"
          echo "LATEST=$LATEST" >> $GITHUB_ENV

      - name: Compare version
        id: compare_version
        run: |
          if [ -z "$LATEST" ]; then
            echo "No existing tags found. Proceeding to tag."
            echo "PROCEED=true" >> $GITHUB_ENV
          elif dpkg --compare-versions "$VERSION" gt "$LATEST"; then
            echo "Version $VERSION is newer than $LATEST. Proceeding to tag."
            echo "PROCEED=true" >> $GITHUB_ENV
          else
            echo "::warning::Version $VERSION is not greater than existing tag $LATEST. Skipping tagging."
            echo "PROCEED=false" >> $GITHUB_ENV
        env:
          VERSION: ${{ env.VERSION }}
          LATEST: ${{ env.LATEST }}

      - name: Create and push tag
        if: env.PROCEED == 'true'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag "$VERSION"
          git push origin "$VERSION"