[platformio]
;default_envs    = espTicker32Neopixels, espTicker32Parola
default_env     = choose
workspace_dir   = .pio.nosync

[env]
framework     = arduino
;extra_scripts = pre:check_env.py
;extra_scripts = pre:copy_examples.py  ; Automate copying

[env:choose]
extra_scripts = pre:abort.py

[common]
build_flags      = 
    -DESP32
;   -D ESPTICKER32_DEBUG
;   -D SPAMANAGER_DEBUG
;   -D FSMANAGER_DEBUG
    -D SETTINGS_DEBUG
;   -D WEERLIVE_DEBUG
;   -D RSSREADER_DEBUG
  
lib_deps         = 
    WebServer
    LittleFS
    tzapu/WiFiManager
    bblanchon/ArduinoJson @ ^6.21.3
    links2004/WebSockets @ ^2.6.1
    https://github.com/mrWheel/esp-networking
    https://github.com/mrWheel/SPAmanager
    https://github.com/mrWheel/esp-FSmanager
    majicdesigns/MD_Parola @ ^3.7.3
    adafruit/Adafruit GFX Library@^1.12.1
    adafruit/Adafruit NeoMatrix@^1.3.3
    adafruit/Adafruit NeoPixel@^1.12.5

[env:espTicker32Parola]
platform         = espressif32
board            = esp32dev
board_build.filesystem = littlefs
board_build.partitions = partitionTables/veryBigFlashPartition.csv
extra_scripts = copyBinaries.py
program_name  = espTicker32
program_binary = espTicker32Parola
;upload_port = COMn

monitor_speed    = 115200
build_flags      = 
  ${common.build_flags}
  -D USE_PAROLA
  -D MAX_ZONES=32
; -D PAROLA_DEBUG

;lib_extra_dirs = lib

monitor_filters  = esp32_exception_decoder
lib_deps         = 
    ${common.lib_deps}


[env:espTicker32Neopixels]
platform         = espressif32
board            = esp32dev
board_build.filesystem = littlefs
board_build.partitions = partitionTables/veryBigFlashPartition.csv
extra_scripts = copyBinaries.py
program_name  = espTicker32
program_binary = espTicker32Neopixels
;upload_port = comx

monitor_speed    = 115200
build_flags      = 
  ${common.build_flags}
    -D USE_NEOPIXELS
   -D NEOPIXELS_DEBUG

;lib_extra_dirs = lib

monitor_filters  = esp32_exception_decoder
lib_deps         = 
    ${common.lib_deps}

